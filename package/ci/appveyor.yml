# kate: indent-width 2;

version: '{branch}-{build}'

branches:
  only:
  - master
  - cmake-ng
skip_tags: true
shallow_clone: true
clone_depth: 1

os: Visual Studio 2015

environment:
  matrix:
  - BUILD_STATIC: OFF

notifications:
- provider: Webhook
  url: https://webhooks.gitter.im/e/415ae90928ba0dbd3df4
  on_build_success: false
  on_build_failure: true
  on_build_status_changed: true

install:
- call "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/vcvarsall.bat"
- set PATH=C:/Sys/bin;C:/tools/ninja;%APPVEYOR_BUILD_FOLDER%/openal/bin/Win32;%PATH%

# Ninja
- cinst ninja

# OpenAL
- appveyor DownloadFile http://kcat.strangesoft.net/openal-binaries/openal-soft-1.17.0-bin.zip
- 7z x openal-soft-1.17.0-bin.zip
- ren openal-soft-1.17.0-bin openal
- ren openal\bin\Win32\soft_oal.dll OpenAL32.dll
- echo [General] > %APPDATA%/alsoft.ini
- echo drivers=null >> %APPDATA%/alsoft.ini

# SDL2
- appveyor DownloadFile http://www.libsdl.org/release/SDL2-devel-2.0.3-VC.zip
- 7z x SDL2-devel-2.0.3-VC.zip
- ren SDL2-2.0.3 SDL

# Corrade
- git clone --depth 1 git://github.com/mosra/corrade.git
- cd corrade
- mkdir build
- cd build
- cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:/Sys -DBUILD_STATIC=%BUILD_STATIC% -G Ninja
- cmake --build .
- cmake --build . --target install
- cd ..
- cd ..

build_script:
- mkdir build
- cd build
- cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:/Sys -DCMAKE_PREFIX_PATH="%APPVEYOR_BUILD_FOLDER%/SDL;%APPVEYOR_BUILD_FOLDER%/openal" -DWITH_AUDIO=ON -DWITH_SDL2APPLICATION=ON -DWITH_WINDOWLESSWGLAPPLICATION=ON -DWITH_WGLCONTEXT=ON -DWITH_MAGNUMFONT=ON -DWITH_MAGNUMFONTCONVERTER=ON -DWITH_OBJIMPORTER=ON -DWITH_TGAIMAGECONVERTER=ON -DWITH_TGAIMPORTER=ON -DWITH_WAVAUDIOIMPORTER=ON -DWITH_DISTANCEFIELDCONVERTER=ON -DWITH_FONTCONVERTER=ON -DWITH_MAGNUMINFO=ON -DBUILD_STATIC=%BUILD_STATIC% -DBUILD_TESTS=ON -G Ninja
- cmake --build .
- cmake --build . --target install
- cmake . -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%/Deploy -DBUILD_TESTS=OFF
- cmake --build . --target install
- cd ../Deploy
- 7z a ../magnum.zip *

test_script:
- cd %APPVEYOR_BUILD_FOLDER%/build
- SET fail=0
- ctest --output-on-failure || SET fail=1 & ver > nul
- cd %APPVEYOR_BUILD_FOLDER%
- appveyor PushArtifact magnum.zip
- exit %fail%
